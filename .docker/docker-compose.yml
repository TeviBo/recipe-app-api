# app : Es el servidor que correra nuestra app

# build: construimos la imagen de docker en nuestro root directory, eso significan ambas reglas

# port: mapeamos el puerto 8000 de nuestra maquina local con el puerto 8000 de la imagen del container

# volumes: es una forma de mapear directorios a nuestro sistema mediante contenedores

# En este caso mapeamos ./app de nuestro directorio con /app del container

# La razon por la que se hace esto es para que se sincronize el directorio local con el del contenedor de manera de no tener que rebuildear la imagen frente a cambios en el codigo. Es como un nodemon

# command: Especificamos el comando para runear el servidor

version: "3.9"
services:
  app:
    build:
      context: ../
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ../app:/app
    command: >
      sh -c "python manage.py wait_for_db &&
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=bobbiesi796
    depends_on:
      - db
  db:
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=bobbiesi796

volumes:
  dev-db-data:
